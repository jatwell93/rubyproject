exit
result
result.first
next
opts
self
user
next
env[ENV_SESSION_OPTIONS]
next
user
step
status
step
next
name
step
sql
name
step
name
step
Thread.current.status
next
name
step
attr_name
step
attributes[name]
step
value
step
attr
step
other
step
value
step
name
step
self
value
step
env["rack.errors"].inspect
env["rack.errors"].debug
env["rack.errors"].name
env["rack.errors"]
env
step
set_host(v)
v
@host
step
@user
step
value
step
k
step
value
step
str
step
value
step
params
step
@@schemes
step
path
parameters
step
@value
step
attributes
step
@value
@valu
step
@recipe
exit
step
ivar
step
@path_helper_modules
step
exception
step
exception
step
exception
step
app
step
@integration_session
step
@integration_session
step
@recipe
exit
eixt
step
eval recipes
eval recipe
exit
step
exps
e.call
e
before
step
exps
step
exps
e
step
expression
step
@user
Recipe.count
exit
response.body
response
exit
@recipe
recipe
q!
eval raise(exception)
eval e
eval @recipe
next
eval :user_id
eval @recipe
